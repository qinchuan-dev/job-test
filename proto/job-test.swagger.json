{
  "swagger": "2.0",
  "info": {
    "title": "job-test.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/test/balance": {
      "get": {
        "operationId": "Balance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/test.proto.QueryBalanceResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "userid",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/v1/test/deposit": {
      "post": {
        "operationId": "Deposit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/test.proto.MsgDepositResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/test.proto.MsgDeposit"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/v1/test/history": {
      "get": {
        "operationId": "Withdraw",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/test.proto.QueryHistoryResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "userid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/v1/test/send": {
      "post": {
        "operationId": "Send",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/test.proto.MsgSendResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/test.proto.MsgSend"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/v1/test/withdraw": {
      "post": {
        "operationId": "Withdraw",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/test.proto.MsgWithdrawResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/test.proto.MsgWithdraw"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    }
  },
  "definitions": {
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    },
    "test.proto.BalanceItem": {
      "type": "object",
      "properties": {
        "amt": {
          "type": "string"
        },
        "denom": {
          "type": "string"
        }
      }
    },
    "test.proto.HistoryItem": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "amt": {
          "type": "string"
        },
        "denom": {
          "type": "string"
        },
        "memo": {
          "type": "string"
        }
      }
    },
    "test.proto.MsgDeposit": {
      "type": "object",
      "properties": {
        "userid": {
          "type": "string"
        },
        "amt": {
          "type": "string"
        },
        "denom": {
          "type": "string"
        },
        "memo": {
          "type": "string"
        }
      }
    },
    "test.proto.MsgDepositResp": {
      "type": "object"
    },
    "test.proto.MsgSend": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "amt": {
          "type": "string"
        },
        "denom": {
          "type": "string"
        },
        "memo": {
          "type": "string"
        }
      }
    },
    "test.proto.MsgSendResp": {
      "type": "object"
    },
    "test.proto.MsgWithdraw": {
      "type": "object",
      "properties": {
        "userid": {
          "type": "string"
        },
        "amt": {
          "type": "string"
        },
        "denom": {
          "type": "string"
        },
        "memo": {
          "type": "string"
        }
      }
    },
    "test.proto.MsgWithdrawResp": {
      "type": "object"
    },
    "test.proto.QueryBalanceResp": {
      "type": "object",
      "properties": {
        "userid": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/test.proto.BalanceItem"
          }
        }
      }
    },
    "test.proto.QueryHistoryResp": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string"
        },
        "history": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/test.proto.HistoryItem"
          }
        }
      }
    }
  }
}
